// class Bat
// constructor Bat Bat.new
function Bat.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push constant 2
pop this 4
push pointer 0
call Bat.show 1
pop temp 0 // void
push pointer 0 // this
return
// method void Bat.dispose
function Bat.dispose 0
push argument 0
pop pointer 0
push pointer 0 // this
call Memory.deAlloc 1
pop temp 0 // void
push constant 0
return
// method void Bat.show
function Bat.show 0
push argument 0
pop pointer 0
push constant 0 // true
not
call Screen.setColor 1
pop temp 0 // void
push pointer 0
call Bat.draw 1
pop temp 0 // void
push constant 0
return
// method void Bat.hide
function Bat.hide 0
push argument 0
pop pointer 0
push constant 0 // false
call Screen.setColor 1
pop temp 0 // void
push pointer 0
call Bat.draw 1
pop temp 0 // void
push constant 0
return
// method void Bat.draw
function Bat.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0 // void
push constant 0
return
// method void Bat.setDirection
function Bat.setDirection 0
push argument 0
pop pointer 0
push argument 1
pop this 4
push constant 0
return
// method int Bat.getLeft
function Bat.getLeft 0
push argument 0
pop pointer 0
push this 0
return
// method int Bat.getRight
function Bat.getRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
return
// method void Bat.setWidth
function Bat.setWidth 0
push argument 0
pop pointer 0
push pointer 0
call Bat.hide 1
pop temp 0 // void
push argument 1
pop this 2
push pointer 0
call Bat.show 1
pop temp 0 // void
push constant 0
return
// method void Bat.move
function Bat.move 0
push argument 0
pop pointer 0
push this 4
push constant 1
eq
not
if-goto BAT.MOVE.IF26_ELSE
push this 0
push constant 4
sub
pop this 0
push this 0
push constant 0
lt
not
if-goto BAT.MOVE.IF27_ELSE
push constant 0
pop this 0
goto BAT.MOVE.IF27_END
label BAT.MOVE.IF27_ELSE
label BAT.MOVE.IF27_END
push constant 0 // false
call Screen.setColor 1
pop temp 0 // void
push this 0
push this 2
add
push constant 1
add
push this 1
push this 0
push this 2
add
push constant 4
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0 // void
push constant 0 // true
not
call Screen.setColor 1
pop temp 0 // void
push this 0
push this 1
push this 0
push constant 3
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0 // void
goto BAT.MOVE.IF26_END
label BAT.MOVE.IF26_ELSE
push this 0
push constant 4
add
pop this 0
push this 0
push this 2
add
push constant 511
gt
not
if-goto BAT.MOVE.IF28_ELSE
push constant 511
push this 2
sub
pop this 0
goto BAT.MOVE.IF28_END
label BAT.MOVE.IF28_ELSE
label BAT.MOVE.IF28_END
push constant 0 // false
call Screen.setColor 1
pop temp 0 // void
push this 0
push constant 4
sub
push this 1
push this 0
push constant 1
sub
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0 // void
push constant 0 // true
not
call Screen.setColor 1
pop temp 0 // void
push this 0
push this 2
add
push constant 3
sub
push this 1
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0 // void
label BAT.MOVE.IF26_END
push constant 0
return
