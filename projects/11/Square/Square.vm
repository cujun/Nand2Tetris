// class Square
// constructor Square Square.new
function Square.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push pointer 0
call Square.draw 1
pop temp 0 // void
push pointer 0 // this
return
// method void Square.dispose
function Square.dispose 0
push argument 0
pop pointer 0
push pointer 0 // this
call Memory.deAlloc 1
pop temp 0 // void
push constant 0
return
// method void Square.draw
function Square.draw 0
push argument 0
pop pointer 0
push constant 0 // true
not
call Screen.setColor 1
pop temp 0 // void
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0 // void
push constant 0
return
// method void Square.erase
function Square.erase 0
push argument 0
pop pointer 0
push constant 0 // false
call Screen.setColor 1
pop temp 0 // void
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0 // void
push constant 0
return
// method void Square.incSize
function Square.incSize 0
push argument 0
pop pointer 0
push this 1
push this 2
add
push constant 254
lt
push this 0
push this 2
add
push constant 510
lt
and
not
if-goto SQUARE.INCSIZE.IF0_ELSE
push pointer 0
call Square.erase 1
pop temp 0 // void
push this 2
push constant 2
add
pop this 2
push pointer 0
call Square.draw 1
pop temp 0 // void
goto SQUARE.INCSIZE.IF0_END
label SQUARE.INCSIZE.IF0_ELSE
label SQUARE.INCSIZE.IF0_END
push constant 0
return
// method void Square.decSize
function Square.decSize 0
push argument 0
pop pointer 0
push this 2
push constant 2
gt
not
if-goto SQUARE.DECSIZE.IF1_ELSE
push pointer 0
call Square.erase 1
pop temp 0 // void
push this 2
push constant 2
sub
pop this 2
push pointer 0
call Square.draw 1
pop temp 0 // void
goto SQUARE.DECSIZE.IF1_END
label SQUARE.DECSIZE.IF1_ELSE
label SQUARE.DECSIZE.IF1_END
push constant 0
return
// method void Square.moveUp
function Square.moveUp 0
push argument 0
pop pointer 0
push this 1
push constant 1
gt
not
if-goto SQUARE.MOVEUP.IF2_ELSE
push constant 0 // false
call Screen.setColor 1
pop temp 0 // void
push this 0
push this 1
push this 2
add
push constant 1
sub
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0 // void
push this 1
push constant 2
sub
pop this 1
push constant 0 // true
not
call Screen.setColor 1
pop temp 0 // void
push this 0
push this 1
push this 0
push this 2
add
push this 1
push constant 1
add
call Screen.drawRectangle 4
pop temp 0 // void
goto SQUARE.MOVEUP.IF2_END
label SQUARE.MOVEUP.IF2_ELSE
label SQUARE.MOVEUP.IF2_END
push constant 0
return
// method void Square.moveDown
function Square.moveDown 0
push argument 0
pop pointer 0
push this 1
push this 2
add
push constant 254
lt
not
if-goto SQUARE.MOVEDOWN.IF3_ELSE
push constant 0 // false
call Screen.setColor 1
pop temp 0 // void
push this 0
push this 1
push this 0
push this 2
add
push this 1
push constant 1
add
call Screen.drawRectangle 4
pop temp 0 // void
push this 1
push constant 2
add
pop this 1
push constant 0 // true
not
call Screen.setColor 1
pop temp 0 // void
push this 0
push this 1
push this 2
add
push constant 1
sub
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0 // void
goto SQUARE.MOVEDOWN.IF3_END
label SQUARE.MOVEDOWN.IF3_ELSE
label SQUARE.MOVEDOWN.IF3_END
push constant 0
return
// method void Square.moveLeft
function Square.moveLeft 0
push argument 0
pop pointer 0
push this 0
push constant 1
gt
not
if-goto SQUARE.MOVELEFT.IF4_ELSE
push constant 0 // false
call Screen.setColor 1
pop temp 0 // void
push this 0
push this 2
add
push constant 1
sub
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0 // void
push this 0
push constant 2
sub
pop this 0
push constant 0 // true
not
call Screen.setColor 1
pop temp 0 // void
push this 0
push this 1
push this 0
push constant 1
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0 // void
goto SQUARE.MOVELEFT.IF4_END
label SQUARE.MOVELEFT.IF4_ELSE
label SQUARE.MOVELEFT.IF4_END
push constant 0
return
// method void Square.moveRight
function Square.moveRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
push constant 510
lt
not
if-goto SQUARE.MOVERIGHT.IF5_ELSE
push constant 0 // false
call Screen.setColor 1
pop temp 0 // void
push this 0
push this 1
push this 0
push constant 1
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0 // void
push this 0
push constant 2
add
pop this 0
push constant 0 // true
not
call Screen.setColor 1
pop temp 0 // void
push this 0
push this 2
add
push constant 1
sub
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0 // void
goto SQUARE.MOVERIGHT.IF5_END
label SQUARE.MOVERIGHT.IF5_ELSE
label SQUARE.MOVERIGHT.IF5_END
push constant 0
return
